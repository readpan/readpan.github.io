<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Read Pan Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://readpan.github.io/"/>
  <updated>2019-11-08T08:29:57.381Z</updated>
  <id>https://readpan.github.io/</id>
  
  <author>
    <name>Read Pan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>求职模拟器</title>
    <link href="https://readpan.github.io/2019/11/08/mind-job-simulator/"/>
    <id>https://readpan.github.io/2019/11/08/mind-job-simulator/</id>
    <published>2019-11-08T08:24:08.000Z</published>
    <updated>2019-11-08T08:29:57.381Z</updated>
    
    <content type="html"><![CDATA[<img src="/2019/11/08/mind-job-simulator/%E6%B1%82%E8%81%8C%E6%A8%A1%E6%8B%9F%E5%99%A8.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/2019/11/08/mind-job-simulator/%E6%B1%82%E8%81%8C%E6%A8%A1%E6%8B%9F%E5%99%A8.png&quot; class=&quot;&quot;&gt;


      
    
    </summary>
    
    
    
      <category term="mind" scheme="https://readpan.github.io/tags/mind/"/>
    
  </entry>
  
  <entry>
    <title>StarUML3.1 For Mac Crack</title>
    <link href="https://readpan.github.io/2019/11/07/soft-staruml/"/>
    <id>https://readpan.github.io/2019/11/07/soft-staruml/</id>
    <published>2019-11-07T01:07:06.000Z</published>
    <updated>2019-11-07T04:37:52.665Z</updated>
    
    <content type="html"><![CDATA[<h2 id="破解前提"><a href="#破解前提" class="headerlink" title="破解前提"></a>破解前提</h2><ol><li>安装StarUML 3.1</li><li>安装nodejs</li><li>安装npm</li></ol><h2 id="安装asar"><a href="#安装asar" class="headerlink" title="安装asar"></a>安装asar</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install asar -g</span><br></pre></td></tr></table></figure><h2 id="解压app-asar"><a href="#解压app-asar" class="headerlink" title="解压app.asar"></a>解压app.asar</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /Applications/StarUML.app/Contents/Resources/</span><br><span class="line">extract app.asar app</span><br></pre></td></tr></table></figure><h2 id="替换代码"><a href="#替换代码" class="headerlink" title="替换代码"></a>替换代码</h2><p>替换下面脚本中的代码块</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Applications/StarUML.app/Contents/Resources/app/src/engine/license-manager.js</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* Copyright (c) 2013-2014 Minkyu Lee. All rights reserved.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* NOTICE:  All information contained herein is, and remains the</span></span><br><span class="line"><span class="comment">* property of Minkyu Lee. The intellectual and technical concepts</span></span><br><span class="line"><span class="comment">* contained herein are proprietary to Minkyu Lee and may be covered</span></span><br><span class="line"><span class="comment">* by Republic of Korea and Foreign Patents, patents in process,</span></span><br><span class="line"><span class="comment">* and are protected by trade secret or copyright law.</span></span><br><span class="line"><span class="comment">* Dissemination of this information or reproduction of this material</span></span><br><span class="line"><span class="comment">* is strictly forbidden unless prior written permission is obtained</span></span><br><span class="line"><span class="comment">* from Minkyu Lee (niklaus.lee@gmail.com).</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;EventEmitter&#125; = <span class="built_in">require</span>(<span class="string">'events'</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">'crypto'</span>)</span><br><span class="line"><span class="keyword">const</span> UnregisteredDialog = <span class="built_in">require</span>(<span class="string">'../dialogs/unregistered-dialog'</span>)</span><br><span class="line"><span class="keyword">const</span> SK = <span class="string">'DF9B72CC966FBE3A46F99858C5AEE'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Check License When File Save</span></span><br><span class="line"><span class="keyword">const</span> LICENSE_CHECK_PROBABILITY = <span class="number">0.3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> status = <span class="literal">false</span></span><br><span class="line"><span class="keyword">var</span> licenseInfo = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set Registration Status</span></span><br><span class="line"><span class="comment"> * This function is out of LicenseManager class for the security reason</span></span><br><span class="line"><span class="comment"> * (To disable changing License status by API)</span></span><br><span class="line"><span class="comment"> * @private</span></span><br><span class="line"><span class="comment"> * @param &#123;boolean&#125; newStat</span></span><br><span class="line"><span class="comment"> * @return &#123;string&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setStatus</span> (<span class="params">licenseManager, newStat</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (status !== newStat) &#123;</span><br><span class="line">    status = newStat</span><br><span class="line">    licenseManager.emit(<span class="string">'statusChanged'</span>, status)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @private</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LicenseManager</span> <span class="keyword">extends</span> <span class="title">EventEmitter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">constructor</span> () &#123;</span><br><span class="line">    <span class="keyword">super</span>()</span><br><span class="line">    <span class="keyword">this</span>.projectManager = <span class="literal">null</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Get Registration Status</span></span><br><span class="line"><span class="comment">   * @return &#123;string&#125;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  getStatus () &#123;</span><br><span class="line">    <span class="keyword">return</span> status</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * Get License Infomation</span></span><br><span class="line"><span class="comment">  * @return &#123;Object&#125;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  getLicenseInfo () &#123;</span><br><span class="line">    <span class="keyword">return</span> licenseInfo</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  findLicense () &#123;</span><br><span class="line">    <span class="keyword">var</span> licensePath = path.join(app.getUserPath(), <span class="string">'/license.key'</span>)</span><br><span class="line">    <span class="keyword">if</span> (!fs.existsSync(licensePath)) &#123;</span><br><span class="line">      licensePath = path.join(app.getAppPath(), <span class="string">'../license.key'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (fs.existsSync(licensePath)) &#123;</span><br><span class="line">      <span class="keyword">return</span> licensePath</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Check license validity</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @return &#123;Promise&#125;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  validate () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// Local check</span></span><br><span class="line">        <span class="keyword">var</span> file = <span class="keyword">this</span>.findLicense()</span><br><span class="line">        <span class="keyword">if</span> (!file) &#123;</span><br><span class="line">          reject(<span class="string">'License key not found'</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">var</span> data = fs.readFileSync(file, <span class="string">'utf8'</span>)</span><br><span class="line">          licenseInfo = <span class="built_in">JSON</span>.parse(data)</span><br><span class="line">          resolve(licenseInfo)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        reject(err)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  checkLicenseValidity () &#123;</span><br><span class="line">    <span class="keyword">this</span>.validate().then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      setStatus(<span class="keyword">this</span>, <span class="literal">true</span>)</span><br><span class="line">    &#125;, () =&gt; &#123;</span><br><span class="line">      setStatus(<span class="keyword">this</span>, <span class="literal">false</span>)</span><br><span class="line">      UnregisteredDialog.showDialog()</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Check the license key in server and store it as license.key file in local</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @param &#123;string&#125; licenseKey</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  register (licenseKey) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">var</span> data = &#123;</span><br><span class="line">        name: <span class="string">"Reborn"</span>,</span><br><span class="line">        product: <span class="string">"Reborn product"</span>,</span><br><span class="line">        licenseType: <span class="string">"PS"</span>,</span><br><span class="line">        quantity: <span class="string">"Reborn Quantity"</span>,</span><br><span class="line">        timestamp: <span class="string">"1529049036"</span>,</span><br><span class="line">        licenseKey: <span class="string">"It's Cracked!!"</span>,</span><br><span class="line">        crackedAuthor: <span class="string">"Reborn"</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">var</span> file = path.join(app.getUserPath(), <span class="string">'/license.key'</span>)</span><br><span class="line">          fs.writeFileSync(file, <span class="built_in">JSON</span>.stringify(data, <span class="number">2</span>))</span><br><span class="line">          licenseInfo = data</span><br><span class="line">          setStatus(<span class="keyword">this</span>, <span class="literal">true</span>)</span><br><span class="line">          resolve(data)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  htmlReady () &#123;</span><br><span class="line">    <span class="keyword">this</span>.projectManager.on(<span class="string">'projectSaved'</span>, (filename, project) =&gt; &#123;</span><br><span class="line">      <span class="keyword">var</span> val = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * (<span class="number">1.0</span> / LICENSE_CHECK_PROBABILITY))</span><br><span class="line">      <span class="keyword">if</span> (val === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.checkLicenseValidity()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  appReady () &#123;</span><br><span class="line">    <span class="keyword">this</span>.checkLicenseValidity()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = LicenseManager</span><br></pre></td></tr></table></figure><h2 id="打包app"><a href="#打包app" class="headerlink" title="打包app"></a>打包app</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /Applications/StarUML.app/Contents/Resources</span><br><span class="line">asar pack app app.asar</span><br></pre></td></tr></table></figure><p>至此，破解结束。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;破解前提&quot;&gt;&lt;a href=&quot;#破解前提&quot; class=&quot;headerlink&quot; title=&quot;破解前提&quot;&gt;&lt;/a&gt;破解前提&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;安装StarUML 3.1&lt;/li&gt;
&lt;li&gt;安装nodejs&lt;/li&gt;
&lt;li&gt;安装npm&lt;/li&gt;
&lt;/ol
      
    
    </summary>
    
    
    
      <category term="Crack" scheme="https://readpan.github.io/tags/Crack/"/>
    
  </entry>
  
  <entry>
    <title>这个blog是如何建立的</title>
    <link href="https://readpan.github.io/2019/10/28/how-to-create-this-blog/"/>
    <id>https://readpan.github.io/2019/10/28/how-to-create-this-blog/</id>
    <published>2019-10-28T02:09:25.000Z</published>
    <updated>2019-10-31T08:01:29.202Z</updated>
    
    <content type="html"><![CDATA[<p>使用hexo + github pages 建立此博客，下面我将详细描述在基于MacOS的系统环境下建站步骤。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a></h2><p>是一个博客框架，基于nodejs运行。使用步骤如下：</p><ol><li><a href="https://www.npmjs.cn/getting-started/installing-node" target="_blank" rel="noopener">安装nodejs</a></li><li>使用<code>npm install -g hexo-cli</code>命令安装hexo</li><li>如果在安装hexo过程中遇到问题，请查询<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a></li></ol><h2 id="使用Hexo"><a href="#使用Hexo" class="headerlink" title="使用Hexo"></a>使用Hexo</h2><h3 id="创建Hexo项目"><a href="#创建Hexo项目" class="headerlink" title="创建Hexo项目"></a>创建Hexo项目</h3><ol><li><p>创建一个空文件夹</p></li><li><p>打开终端并定位到该文件夹</p></li><li><p>执行下面命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd your_folder_directory</span><br><span class="line">hexo init ./</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>此时的博客已经建立好</p></li><li><p>更多细节内容可以查看<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a></p></li></ol><h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><h4 id="创建一篇文章"><a href="#创建一篇文章" class="headerlink" title="创建一篇文章"></a>创建一篇文章</h4><p>在项目路径下打开终端，并键入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new "hello"</span><br></pre></td></tr></table></figure><p>这样就会在项目目录<code>./source/_post</code>中创建相应的md文件，编辑这个文件即可进行写作。</p><h4 id="使用Typora快速保存，插入本地图片"><a href="#使用Typora快速保存，插入本地图片" class="headerlink" title="使用Typora快速保存，插入本地图片"></a><del>使用Typora快速保存，插入本地图片</del></h4><p><del>如果使用Typora进行写作，可以进行如下设置，以快速保存图片到项目本地。</del></p><p><del>在<code>Typora - 偏好设置 - 图像</code>中，设置如下图</del></p><img src="/2019/10/28/how-to-create-this-blog/image-20191028105955271.png" class=""><h4 id="静态网站生成"><a href="#静态网站生成" class="headerlink" title="静态网站生成"></a>静态网站生成</h4><p>使用命令<code>hexo g</code>可以生成静态网站，生成后会存放在<code>public</code>文件夹下面。</p><p>可以使用<code>hexo s</code>开启本地服务器，进行本地测试。</p><h2 id="部署到GitHub-Pages"><a href="#部署到GitHub-Pages" class="headerlink" title="部署到GitHub Pages"></a>部署到GitHub Pages</h2><p>可以根据<a href="https://pages.github.com/" target="_blank" rel="noopener">官方文档</a>，进行部署。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用hexo + github pages 建立此博客，下面我将详细描述在基于MacOS的系统环境下建站步骤。&lt;/p&gt;
&lt;h2 id=&quot;安装Hexo&quot;&gt;&lt;a href=&quot;#安装Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装Hexo&quot;&gt;&lt;/a&gt;安装&lt;a 
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
