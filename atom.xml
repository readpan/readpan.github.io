<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Read Pan Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://readpan.github.io/"/>
  <updated>2019-11-07T01:17:01.881Z</updated>
  <id>https://readpan.github.io/</id>
  
  <author>
    <name>Read Pan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>StarUML3.1 For Mac Crack</title>
    <link href="https://readpan.github.io/2019/11/07/soft-staruml/"/>
    <id>https://readpan.github.io/2019/11/07/soft-staruml/</id>
    <published>2019-11-07T01:07:06.000Z</published>
    <updated>2019-11-07T01:17:01.881Z</updated>
    
    <content type="html"><![CDATA[<h2 id="破解前提"><a href="#破解前提" class="headerlink" title="破解前提"></a>破解前提</h2><ol><li>安装StarUML 3.1</li><li>安装nodejs</li><li>安装npm</li></ol><h2 id="安装asar"><a href="#安装asar" class="headerlink" title="安装asar"></a>安装asar</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install asar -g</span><br></pre></td></tr></table></figure><h2 id="解压app-asar"><a href="#解压app-asar" class="headerlink" title="解压app.asar"></a>解压app.asar</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /Applications/StarUML.app/Contents/Resources/</span><br><span class="line">extract app.asar app</span><br></pre></td></tr></table></figure><h2 id="替换代码"><a href="#替换代码" class="headerlink" title="替换代码"></a>替换代码</h2><p>替换下面脚本中的代码块</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/Applications/StarUML.app/Contents/Resources/app/src/engine/license-manager.js</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Check license validity</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @return &#123;Promise&#125;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  validate () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// Local check</span></span><br><span class="line">        <span class="keyword">var</span> file = <span class="keyword">this</span>.findLicense()</span><br><span class="line">        <span class="keyword">if</span> (!file) &#123;</span><br><span class="line">          <span class="comment">// reject('License key not found')</span></span><br><span class="line">          setStatus(<span class="keyword">this</span>,<span class="literal">true</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">var</span> data = fs.readFileSync(file, <span class="string">'utf8'</span>)</span><br><span class="line">          licenseInfo = <span class="built_in">JSON</span>.parse(data)</span><br><span class="line">          <span class="keyword">var</span> base = SK + licenseInfo.name +</span><br><span class="line">            SK + licenseInfo.product + <span class="string">'-'</span> + licenseInfo.licenseType +</span><br><span class="line">            SK + licenseInfo.quantity +</span><br><span class="line">            SK + licenseInfo.timestamp + SK</span><br><span class="line">          <span class="keyword">var</span> _key = crypto.createHash(<span class="string">'sha1'</span>).update(base).digest(<span class="string">'hex'</span>).toUpperCase()</span><br><span class="line">          <span class="keyword">if</span> (_key !== licenseInfo.licenseKey) &#123;</span><br><span class="line">            <span class="comment">// reject('Invalid license key')</span></span><br><span class="line">            setStatus(<span class="keyword">this</span>,<span class="literal">true</span>)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// Server check</span></span><br><span class="line">            $.post(app.config.validation_url, &#123;<span class="attr">licenseKey</span>: licenseInfo.licenseKey&#125;)</span><br><span class="line">              .done(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">                resolve(data)</span><br><span class="line">              &#125;)</span><br><span class="line">              .fail(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (err &amp;&amp; err.status === <span class="number">499</span>) &#123; <span class="comment">/* License key not exists */</span></span><br><span class="line">                  <span class="comment">// reject(err)</span></span><br><span class="line">                  setStatus(<span class="keyword">this</span>,<span class="literal">true</span>)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                  <span class="comment">// If server is not available, assume that license key is valid</span></span><br><span class="line">                  resolve(licenseInfo)</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="comment">// reject(err)</span></span><br><span class="line">        setStatus(<span class="keyword">this</span>,<span class="literal">true</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>至此，破解结束。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;破解前提&quot;&gt;&lt;a href=&quot;#破解前提&quot; class=&quot;headerlink&quot; title=&quot;破解前提&quot;&gt;&lt;/a&gt;破解前提&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;安装StarUML 3.1&lt;/li&gt;
&lt;li&gt;安装nodejs&lt;/li&gt;
&lt;li&gt;安装npm&lt;/li&gt;
&lt;/ol
      
    
    </summary>
    
    
    
      <category term="Crack" scheme="https://readpan.github.io/tags/Crack/"/>
    
  </entry>
  
  <entry>
    <title>这个blog是如何建立的</title>
    <link href="https://readpan.github.io/2019/10/28/how-to-create-this-blog/"/>
    <id>https://readpan.github.io/2019/10/28/how-to-create-this-blog/</id>
    <published>2019-10-28T02:09:25.000Z</published>
    <updated>2019-10-31T08:01:29.202Z</updated>
    
    <content type="html"><![CDATA[<p>使用hexo + github pages 建立此博客，下面我将详细描述在基于MacOS的系统环境下建站步骤。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a></h2><p>是一个博客框架，基于nodejs运行。使用步骤如下：</p><ol><li><a href="https://www.npmjs.cn/getting-started/installing-node" target="_blank" rel="noopener">安装nodejs</a></li><li>使用<code>npm install -g hexo-cli</code>命令安装hexo</li><li>如果在安装hexo过程中遇到问题，请查询<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a></li></ol><h2 id="使用Hexo"><a href="#使用Hexo" class="headerlink" title="使用Hexo"></a>使用Hexo</h2><h3 id="创建Hexo项目"><a href="#创建Hexo项目" class="headerlink" title="创建Hexo项目"></a>创建Hexo项目</h3><ol><li><p>创建一个空文件夹</p></li><li><p>打开终端并定位到该文件夹</p></li><li><p>执行下面命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd your_folder_directory</span><br><span class="line">hexo init ./</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>此时的博客已经建立好</p></li><li><p>更多细节内容可以查看<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a></p></li></ol><h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><h4 id="创建一篇文章"><a href="#创建一篇文章" class="headerlink" title="创建一篇文章"></a>创建一篇文章</h4><p>在项目路径下打开终端，并键入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new "hello"</span><br></pre></td></tr></table></figure><p>这样就会在项目目录<code>./source/_post</code>中创建相应的md文件，编辑这个文件即可进行写作。</p><h4 id="使用Typora快速保存，插入本地图片"><a href="#使用Typora快速保存，插入本地图片" class="headerlink" title="使用Typora快速保存，插入本地图片"></a><del>使用Typora快速保存，插入本地图片</del></h4><p><del>如果使用Typora进行写作，可以进行如下设置，以快速保存图片到项目本地。</del></p><p><del>在<code>Typora - 偏好设置 - 图像</code>中，设置如下图</del></p><img src="/2019/10/28/how-to-create-this-blog/image-20191028105955271.png" class=""><h4 id="静态网站生成"><a href="#静态网站生成" class="headerlink" title="静态网站生成"></a>静态网站生成</h4><p>使用命令<code>hexo g</code>可以生成静态网站，生成后会存放在<code>public</code>文件夹下面。</p><p>可以使用<code>hexo s</code>开启本地服务器，进行本地测试。</p><h2 id="部署到GitHub-Pages"><a href="#部署到GitHub-Pages" class="headerlink" title="部署到GitHub Pages"></a>部署到GitHub Pages</h2><p>可以根据<a href="https://pages.github.com/" target="_blank" rel="noopener">官方文档</a>，进行部署。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用hexo + github pages 建立此博客，下面我将详细描述在基于MacOS的系统环境下建站步骤。&lt;/p&gt;
&lt;h2 id=&quot;安装Hexo&quot;&gt;&lt;a href=&quot;#安装Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装Hexo&quot;&gt;&lt;/a&gt;安装&lt;a 
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
