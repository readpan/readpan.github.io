{"meta":{"title":"Read Pan Blog","subtitle":null,"description":null,"author":"Read Pan","url":"https://readpan.github.io","root":"/"},"pages":[],"posts":[{"title":"StarUML3.1 For Mac Crack","slug":"soft-staruml","date":"2019-11-07T01:07:06.000Z","updated":"2019-11-07T01:17:01.881Z","comments":true,"path":"2019/11/07/soft-staruml/","link":"","permalink":"https://readpan.github.io/2019/11/07/soft-staruml/","excerpt":"","text":"破解前提 安装StarUML 3.1 安装nodejs 安装npm 安装asar1npm install asar -g 解压app.asar12cd /Applications/StarUML.app/Contents/Resources/extract app.asar app 替换代码替换下面脚本中的代码块 1/Applications/StarUML.app/Contents/Resources/app/src/engine/license-manager.js 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647/** * Check license validity * * @return &#123;Promise&#125; */ validate () &#123; return new Promise((resolve, reject) =&gt; &#123; try &#123; // Local check var file = this.findLicense() if (!file) &#123; // reject('License key not found') setStatus(this,true) &#125; else &#123; var data = fs.readFileSync(file, 'utf8') licenseInfo = JSON.parse(data) var base = SK + licenseInfo.name + SK + licenseInfo.product + '-' + licenseInfo.licenseType + SK + licenseInfo.quantity + SK + licenseInfo.timestamp + SK var _key = crypto.createHash('sha1').update(base).digest('hex').toUpperCase() if (_key !== licenseInfo.licenseKey) &#123; // reject('Invalid license key') setStatus(this,true) &#125; else &#123; // Server check $.post(app.config.validation_url, &#123;licenseKey: licenseInfo.licenseKey&#125;) .done(data =&gt; &#123; resolve(data) &#125;) .fail(err =&gt; &#123; if (err &amp;&amp; err.status === 499) &#123; /* License key not exists */ // reject(err) setStatus(this,true) &#125; else &#123; // If server is not available, assume that license key is valid resolve(licenseInfo) &#125; &#125;) &#125; &#125; &#125; catch (err) &#123; // reject(err) setStatus(this,true) &#125; &#125;) &#125; 至此，破解结束。","categories":[],"tags":[{"name":"Crack","slug":"Crack","permalink":"https://readpan.github.io/tags/Crack/"}]},{"title":"这个blog是如何建立的","slug":"how-to-create-this-blog","date":"2019-10-28T02:09:25.000Z","updated":"2019-10-31T08:01:29.202Z","comments":true,"path":"2019/10/28/how-to-create-this-blog/","link":"","permalink":"https://readpan.github.io/2019/10/28/how-to-create-this-blog/","excerpt":"","text":"使用hexo + github pages 建立此博客，下面我将详细描述在基于MacOS的系统环境下建站步骤。 安装Hexo是一个博客框架，基于nodejs运行。使用步骤如下： 安装nodejs 使用npm install -g hexo-cli命令安装hexo 如果在安装hexo过程中遇到问题，请查询官方文档 使用Hexo创建Hexo项目 创建一个空文件夹 打开终端并定位到该文件夹 执行下面命令 1234cd your_folder_directoryhexo init ./cd &lt;folder&gt;npm install 此时的博客已经建立好 更多细节内容可以查看官方文档 写作创建一篇文章在项目路径下打开终端，并键入 1hexo new \"hello\" 这样就会在项目目录./source/_post中创建相应的md文件，编辑这个文件即可进行写作。 使用Typora快速保存，插入本地图片如果使用Typora进行写作，可以进行如下设置，以快速保存图片到项目本地。 在Typora - 偏好设置 - 图像中，设置如下图 静态网站生成使用命令hexo g可以生成静态网站，生成后会存放在public文件夹下面。 可以使用hexo s开启本地服务器，进行本地测试。 部署到GitHub Pages可以根据官方文档，进行部署。","categories":[],"tags":[]}]}